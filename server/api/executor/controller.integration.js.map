{"version":3,"sources":["../../../../server/api/executor/controller.integration.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;yBAGO,WAAW;;;;AAD/B,IAAI,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;AAI3B,QAAQ,CAAC,eAAe,EAAE,YAAW;;AAEnC,UAAQ,CAAC,wBAAwB,EAAE,YAAW;AAC5C,QAAI,MAAM,CAAC;AACX,cAAU,CAAC,UAAS,IAAI,EAAE;AACxB,kCAAQ,GAAG,CAAC,CACT,IAAI,CAAC,cAAc,CAAC,CACpB,IAAI,CAAC;AACJ,YAAI,EAAE,aAAa;AACnB,cAAM,EAAE,MAAM;OACf,CAAC,CACD,MAAM,CAAC,GAAG,CAAC,CACX,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,CAC9B,GAAG,CAAC,UAAC,GAAG,EAAE,GAAG,EAAK;AACjB,YAAI,GAAG,EAAE;AACP,iBAAO,IAAI,CAAC,GAAG,CAAC,CAAC;SAClB;AACD,cAAM,GAAG,GAAG,CAAC,IAAI,CAAC;AAClB,YAAI,EAAE,CAAC;OACR,CAAC,CAAC;KACN,CAAC,CAAC;;AAEF,MAAE,CAAC,0BAA0B,EAAE,YAAW;AACzC,YAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;KACzC,CAAC,CAAC;GAEJ,CAAC,CAAC;;AAED,UAAQ,CAAC,wBAAwB,EAAE,YAAW;AAC/C,QAAI,MAAM,CAAC;AACV,cAAU,CAAC,UAAS,IAAI,EAAE;AACxB,kCAAQ,GAAG,CAAC,CACT,IAAI,CAAC,cAAc,CAAC,CACpB,IAAI,CAAC;AACJ,YAAI,EAAE,aAAa;AACnB,cAAM,EAAE,MAAM;OACf,CAAC,CACD,MAAM,CAAC,GAAG,CAAC,CACX,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,CAC9B,GAAG,CAAC,UAAC,GAAG,EAAE,GAAG,EAAK;AACjB,YAAI,GAAG,EAAE;AACP,iBAAO,IAAI,CAAC,GAAG,CAAC,CAAC;SAClB;AACD,cAAM,GAAG,GAAG,CAAC,IAAI,CAAC;AAClB,YAAI,EAAE,CAAC;OACR,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,MAAE,CAAC,0BAA0B,EAAE,YAAW;AACxC,YAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;KACzC,CAAC,CAAC;GAEJ,CAAC,CAAC;CAGJ,CAAC,CAAC","file":"controller.integration.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nimport request from 'supertest';\n\n\ndescribe('Executor API:', function() {\n\n  describe('POST init /api/execute', function() {\n    var things;\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/execute')\n        .send({\n          game: 'Slot_Server',\n          action: 'init'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          things = res.body;\n          done();\n        });\n    });\n\n     it('should respond with JSON', function() {\n      expect(things).to.be.instanceOf(Object);\n    });\n\n  });\n  \n    describe('POST spin /api/execute', function() {\n\t  var things;\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/execute')\n        .send({\n          game: 'Slot_Server',\n          action: 'spin'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          things = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON', function() {\n      expect(things).to.be.instanceOf(Object);\n    });\n\n  });\n  \n  \n});\n"]}